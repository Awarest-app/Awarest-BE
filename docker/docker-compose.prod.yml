version: '3'
services:
  db:
    env_file: ../config/.env.production
    image: postgres:14
    container_name: coura-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5433:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - nest-network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      # 1) /data 디렉토리를 호스트의 볼륨과 연결 -> RDB 파일이 재시작 후에도 유지
      - redis-data:/data
      # 2) 커스텀 설정 파일 마운트
      - ../config/redis.conf:/usr/local/etc/redis/redis.conf:ro # 상대 경로 사용

    # 필요하면 volume, 환경 변수, 비밀번호 설정 등 추가 가능
    # environment:
    #   REDIS_PASSWORD: example
    # command: ["redis-server", "--requirepass", "example"]
    networks:
      - nest-network

  nest-app:
    container_name: nest-app
    # image: '888577060888.dkr.ecr.us-east-1.amazonaws.com/server-repository:latest'
    image: '888577060888.dkr.ecr.us-east-1.amazonaws.com/server-repository:__IMAGE_TAG__'
    env_file:
      - ../config/.env.production
    # build: .
    ports:
      - '11582:3000'
      # - '80:3000'
      # - '443:3000'
    # - '${NEST_PORT}:3000'
    expose:
      - 3000
    volumes:
      - ../config/firebase-adminsdk.json:/app/config/firebase-adminsdk.json:ro
    depends_on:
      - db
    networks:
      - nest-network
    restart: always

volumes:
  db-data:
  redis-data:

networks:
  nest-network:
